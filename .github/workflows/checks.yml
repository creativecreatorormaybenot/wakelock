name: Checks

on:
  pull_request:
    branches:
      - master
    paths:
      - '**/lib/**'
      - '**/android/**'
      - '**/ios/**'
      - '**/pubspec.yaml'
      - '**/test/**'
      - '**/test_driver/**'
      - '**/assets/**'
      - '**/integration_test/**'

jobs:
  analyze:
    runs-on: ${{ matrix.os }}
    name: Analysis of ${{ matrix.package }} (${{ matrix.channel }}; ${{ matrix.os }})
    strategy:
      matrix:
        os:
          - ubuntu-latest
        channel:
          - 'stable'
          - 'beta'
          - 'dev'
        package:
          - 'wakelock'
          - 'wakelock_platform_interface'
          - 'wakelock_web'
      fail-fast: false

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: subosito/flutter-action@v1.3.2
        with:
          channel: ${{ matrix.channel }}
      - run: flutter pub get
        working-directory: ${{ matrix.package }}
      - name: Check format
        working-directory: ${{ matrix.package }}
        run: dart format . --set-exit-if-changed
      - run: flutter analyze
        working-directory: ${{ matrix.package }}

  test:
    runs-on: macos-latest
    name: Testing of ${{ matrix.package }} (${{ matrix.channel }}; ${{ matrix.device }})
    strategy:
      matrix:
        device:
          - 'iPhone 11 Pro Max (14.0)'
        channel:
          - 'stable'
          - 'beta'
          - 'dev'
        package:
          - 'wakelock'
          - 'wakelock_platform_interface'
          - 'wakelock_web'
      fail-fast: false

    steps:
      - name: Start iOS simulator
        if: matrix.package == 'wakelock'
        run: |
          xcrun instruments -s
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?simulator not found}"
      - uses: actions/checkout@v2.3.3
      - uses: subosito/flutter-action@v1.3.2
        with:
          channel: ${{ matrix.channel }}
      - run: flutter pub get
        working-directory: ${{ matrix.package }}
      - name: Run unit tests (tester)
        if: matrix.package != 'wakelock_web'
        run: flutter test
        working-directory: ${{ matrix.package }}
      - name: Run unit tests (chrome)
        if: matrix.package == 'wakelock_web'
        run: flutter test --platform chrome
        working-directory: ${{ matrix.package }}
      - name: Integration tests on iOS
        if: matrix.package == 'wakelock'
        run: |
          cd wakelock/example
          flutter drive --driver=test_driver/integration_test.dart --target=integration_test/wakelock_test.dart

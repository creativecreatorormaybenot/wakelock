name: checks

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/lib/**'
      - '**/android/**'
      - '**/ios/**'
      - '**/pubspec.yaml'
      - '**/test/**'
      - '**/test_driver/**'
      - '**/assets/**'
      - '**/integration_test/**'
      - '.github/workflows/checks.yml'

jobs:
  analyze:
    timeout-minutes: 11
    runs-on: ubuntu-latest
    name: ${{ matrix.package }} analysis on ${{ matrix.channel }}
    strategy:
      matrix:
        channel:
          - 'stable'
          - 'beta'
        package:
          - 'wakelock'
          - 'wakelock_macos'
          - 'wakelock_platform_interface'
          - 'wakelock_web'
          - 'wakelock_windows'
      fail-fast: false

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: subosito/flutter-action@v1.4.0
        with:
          channel: ${{ matrix.channel }}
      - run: flutter pub get
        working-directory: ${{ matrix.package }}
      - name: Check format
        working-directory: ${{ matrix.package }}
        run: dart format . --set-exit-if-changed
      - run: flutter analyze
        working-directory: ${{ matrix.package }}

  test:
    timeout-minutes: 16
    runs-on: macos-latest
    name: ${{ matrix.package }} testing on ${{ matrix.channel }} with ${{ matrix.device }}
    strategy:
      matrix:
        device:
          - 'iPhone 12 Pro Simulator (15.2)'
          - 'iPhone 13 Pro Max Simulator (15.2)'
        channel:
          - 'stable'
          - 'beta'
        package:
          - 'wakelock'
          - 'wakelock_macos'
          - 'wakelock_platform_interface'
          # Web tests do not work for now.
          # - 'wakelock_web'
          - 'wakelock_windows'
      fail-fast: false

    steps:
      - name: Start iOS simulator
        if: matrix.package == 'wakelock'
        # Using gawk to be able to use my regex to separate the IDs from the device names
        # (because my awk skills suck) to then pipe that to awk to find the right device.
        run: |
          brew install gawk
          xcrun xctrace list devices
          UDID=$(
            xcrun xctrace list devices |
            gawk 'match($0, /(.+) \(([^.]*)\)/, a) { printf "%s,%s\n", a[1], a[2] }' |
            awk -F ',' -v 'device=${{ matrix.device }}' '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?simulator not found}"
      - uses: actions/checkout@v2.3.3
      - uses: subosito/flutter-action@v1.4.0
        with:
          channel: ${{ matrix.channel }}
      - run: flutter pub get
        working-directory: ${{ matrix.package }}
      - name: Run unit tests (tester)
        if: matrix.package != 'wakelock_web'
        run: flutter test
        working-directory: ${{ matrix.package }}
      - name: Run unit tests (chrome)
        if: matrix.package == 'wakelock_web'
        run: |
          flutter config --enable-web
          flutter test --platform chrome
        working-directory: ${{ matrix.package }}
      - name: Integration tests on iOS
        if: matrix.package == 'wakelock'
        run: |
          cd wakelock/example
          flutter drive --driver=test_driver/integration_test.dart --target=integration_test/wakelock_test.dart
      - name: Integration tests on macOS
        if: matrix.package == 'wakelock_macos'
        run: |
          cd wakelock/example
          flutter config --enable-macos-desktop
          flutter drive --driver=test_driver/integration_test.dart --target=integration_test/wakelock_test.dart -d macos

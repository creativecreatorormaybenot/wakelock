name: Publish packages and releases

on:
  push:
    branches:
      - master
    paths:
      # Can only publish the package when the Pubspec changed, i.e. specifically the package
      # version, however, we can ensure that this is the case in code review.
      - '*/pubspec.yaml'

jobs:
  pana:
    timeout-minutes: 9
    runs-on: ubuntu-latest
    name: Configuration of ${{ matrix.package }}
    strategy:
      matrix:
        package:
          - 'wakelock'
          - 'wakelock_platform_interface'
          - 'wakelock_web'
      fail-fast: false

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: axel-op/dart-package-analyzer@v3
        with:
          relativePath: ${{ matrix.package }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: pana
    timeout-minutes: 2
    runs-on: ubuntu-latest
    name: Publishing of ${{ matrix.package }}
    strategy:
      matrix:
        package:
          - 'wakelock'
          - 'wakelock_platform_interface'
          - 'wakelock_web'
      fail-fast: false

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: sakebook/actions-flutter-pub-publisher@v1.3.1
        with:
          relativePath: ${{ matrix.package }}
          credential: ${{ secrets.PUB_CREDENTIALS }}
          flutter_package: true
          skip_test: true

  tag-release:
    needs: publish
    timeout-minutes: 1
    runs-on: ubuntu-latest
    name: Tagging of ${{ matrix.package }}
    strategy:
      matrix:
        package:
          - wakelock
          - wakelock_web
          - wakelock_platform_interface

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check package Pubspec
        id: pubspec
        run: |
          set +e
          git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep '${{ matrix.package }}/pubspec.yaml' &> /dev/null
          echo ::set-output name=changed::$?
          set -e
      - name: Extract package version
        if: steps.pubspec.outputs.changed == 0
        run: |
          cd ${{ matrix.package }}
          echo ::set-env name=VERSION::"$(awk '{if ($1 ~ /^version:/) print $2}' pubspec.yaml)"
      - name: Create Release
        if: steps.pubspec.outputs.changed == 0
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.package }}-v${{ env.VERSION }}
          release_name: ${{ matrix.package }} v${{ env.VERSION }}
          draft: false
          prerelease: false